pipeline {
    agent any
    triggers {
        githubPush()
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh """echo $WORKSPACE
                       cd $WORKSPACE/code/python_generator; pwd; ls -alh
                       ./build.sh"""
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Get the current host user ID and group ID
                    def uid = sh(script: 'id -u', returnStdout: true).trim()
                    def gid = sh(script: 'id -g', returnStdout: true).trim()

                    // Ensure directories exist and have proper permissions
                    sh """
                        echo "Checking directories in $WORKSPACE"
                        chmod -R 755 $WORKSPACE/source $WORKSPACE/generated $WORKSPACE/config
                        ls -alh $WORKSPACE/source $WORKSPACE/generated $WORKSPACE/config \$WORKSPACE

                        docker run --rm \
                            --mount src=\$WORKSPACE/source,target=/app/source,type=bind \\
                            --mount src=\$WORKSPACE/generated,target=/app/output,type=bind \\
                            --mount src=\$WORKSPACE/config,target=/app/config,type=bind \\
                            --user ${uid}:${gid} \\
                            python_generator
                        docker ps"""
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker stop python_generator || true'
                sh 'docker rm python_generator || true'
            }
        }
    }
}