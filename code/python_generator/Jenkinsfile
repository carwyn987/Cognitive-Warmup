pipeline {
    agent any
    triggers {
        githubPush()
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh """echo $WORKSPACE
                       cd $WORKSPACE/code/python_generator; pwd; ls -alh
                       ./build.sh"""
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Get the current host user ID and group ID
                    def uid = sh(script: 'id -u', returnStdout: true).trim()
                    def gid = sh(script: 'id -g', returnStdout: true).trim()

                    // Ensure directories exist and have proper permissions
                    sh """chmod -R 777 $WORKSPACE/output
                        chmod -R 777 $WORKSPACE/output/output.txt
                        chmod -R 777 $WORKSPACE/source
                        chmod -R 777 $WORKSPACE/config
                        chmod -R 777 $WORKSPACE/config/tasking.yaml
                    
                        ls -alh $WORKSPACE $WORKSPACE/code/python_generator
                        ls -alh $WORKSPACE/code/python_generator/config
                        ls -alh $WORKSPACE/code/python_generator/source
                        docker run --rm \\
                            --user ${uid}:${gid} \\
                            python_generator
                        docker ps
                        ls -alh $WORKSPACE/output
                        """
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker stop python_generator || true'
                sh 'docker rm python_generator || true'
            }
        }
    }
}