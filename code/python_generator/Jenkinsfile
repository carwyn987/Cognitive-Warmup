pipeline {
    agent any
    triggers {
        githubPush()
    }
    environment {
        IMAGE_NAME = 'python_generator'  // Docker image name
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh """
                        echo \$WORKSPACE
                        cd \$WORKSPACE/code/python_generator
                        pwd
                        ls -alh
                        ./build.sh
                    """
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Get the current host user ID and group ID
                    def uid = sh(script: 'id -u', returnStdout: true).trim()
                    def gid = sh(script: 'id -g', returnStdout: true).trim()

                    // Ensure directories exist and have proper permissions
                    sh """
                        echo "Checking directories in \$WORKSPACE"
                        chmod -R 777 \$WORKSPACE/source \$WORKSPACE/generated \$WORKSPACE/config
                        ls -alh \$WORKSPACE/source \$WORKSPACE/generated \$WORKSPACE/config \$WORKSPACE
                    """

                    // Run Docker container using Docker plugin
                    docker.image(IMAGE_NAME).inside("-v \$WORKSPACE/source:/app/source -v \$WORKSPACE/generated:/app/output -v \$WORKSPACE/config:/app/config --user ${uid}:${gid}") {
                        sh """
                            echo "Running container with user ID \$uid and group ID \$gid"
                            ls -alh /app/source /app/output /app/config
                            python /app/source/your_script.py  # or any other command you need to run
                        """
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                // Clean up any containers if needed
                sh 'docker ps -q --filter "name=python_generator" | xargs -r docker stop || true'
                sh 'docker ps -aq --filter "name=python_generator" | xargs -r docker rm || true'
            }
        }
    }
}
