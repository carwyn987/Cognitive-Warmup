pipeline {
    agent any
    triggers {
        githubPush()
    }
    stages {
        stage('Build') {
            steps {
                script {
                    sh """echo $WORKSPACE
                       cd $WORKSPACE/code/python_generator; pwd; ls -alh
                       ./build.sh"""
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    // Ensure directories exist and have proper permissions
                    sh "sleep 5"
                    sh """
                        echo "Checking directories in $WORKSPACE"
                        # mkdir -p $WORKSPACE/source $WORKSPACE/generated $WORKSPACE/config
                        chmod -R 755 $WORKSPACE/source $WORKSPACE/generated $WORKSPACE/config
                        ls -alh $WORKSPACE/source $WORKSPACE/generated $WORKSPACE/config
                    """
                    sh """ls -alh \$WORKSPACE
                       ls -alh \$WORKSPACE/config
                       docker run --rm \
                            -e "OPENAI_API_KEY=\$OPENAI_API_KEY" \
                            -e "YOUTUBE_API_KEY=\$YOUTUBE_API_KEY" \
                            -v \$WORKSPACE/source:/app/source \
                            -v \$WORKSPACE/generated:/app/output \
                            -v \$WORKSPACE/config:/app/config \
                            python_generator
                       docker ps"""
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker stop python_generator || true'
                sh 'docker rm python_generator || true'
            }
        }
    }
}